# {{ ansible_managed }}

[Unit]
Description="{{ item.value.description | default("Service for " + item.key) }}"
{% if item.value.wants is defined %}
Wants={{ item.value.wants }}
{% endif -%}
{% if item.value.requires is defined %}
Requires={{ item.value.requires }}
{% endif -%}
{% if item.value.before is defined %}
Before={{ item.value.before }}
{% endif -%}
{% if item.value.after is defined %}
After={{ item.value.after }}
{% endif %}
{% if item.value.assert_architecture is defined %}
{% for assert_architecture in item.value.assert_architecture %}
AssertArchitecture={{ assert_architecture }}
{% endfor -%}
{% endif -%}
{% if item.value.assert_virtualization is defined %}
{% for assert_virtualization in item.value.assert_virtualization %}
AssertVirtualization={{ assert_virtualization }}
{% endfor -%}
{% endif -%}
{% if item.value.assert_host is defined %}
{% for assert_host in item.value.assert_host %}
AssertHost={{ assert_host }}
{% endfor -%}
{% endif -%}
{% if item.value.assert_kernel_command_line is defined %}
{% for assert_kernel_command_line in item.value.assert_kernel_command_line %}
AssertKernelCommandLine={{ assert_kernel_command_line }}
{% endfor -%}
{% endif -%}
{% if item.value.assert_kernel_version is defined %}
{% for assert_kernel_version in item.value.assert_kernel_version %}
AssertKernelVersion={{ assert_kernel_version }}
{% endfor -%}
{% endif -%}
{% if item.value.assert_security is defined %}
{% for assert_security in item.value.assert_security %}
AssertSecurity={{ assert_security }}
{% endfor -%}
{% endif -%}
{% if item.value.assert_capability is defined %}
{% for assert_capability in item.value.assert_capability %}
AssertCapability={{ assert_capability }}
{% endfor -%}
{% endif -%}
{% if item.value.assert_acpower is defined %}
{% for assert_acpower in item.value.assert_acpower %}
AssertACPower={{ assert_acpower }}
{% endfor -%}
{% endif -%}
{% if item.value.assert_needs_update is defined %}
{% for assert_needs_update in item.value.assert_needs_update %}
AssertNeedsUpdate={{ assert_needs_update }}
{% endfor -%}
{% endif -%}
{% if item.value.assert_first_boot is defined %}
{% for assert_first_boot in item.value.assert_first_boot %}
AssertFirstBoot={{ assert_first_boot }}
{% endfor -%}
{% endif -%}
{% if item.value.assert_path_exists is defined %}
{% for assert_path_exists in item.value.assert_path_exists %}
AssertPathExists={{ assert_path_exists }}
{% endfor -%}
{% endif -%}
{% if item.value.assert_path_exists_glob is defined %}
{% for assert_path_exists_glob in item.value.assert_path_exists_glob %}
AssertPathExistsGlob={{ assert_path_exists_glob }}
{% endfor -%}
{% endif -%}
{% if item.value.assert_path_is_directory is defined %}
{% for assert_path_is_directory in item.value.assert_path_is_directory %}
AssertPathIsDirectory={{ assert_path_is_directory }}
{% endfor -%}
{% endif -%}
{% if item.value.assert_path_is_symbolic_link is defined %}
{% for assert_path_is_symbolic_link in item.value.assert_path_is_symbolic_link %}
AssertPathIsSymbolicLink={{ assert_path_is_symbolic_link }}
{% endfor -%}
{% endif -%}
{% if item.value.assert_path_is_mount_point is defined %}
{% for assert_path_is_mount_point in item.value.assert_path_is_mount_point %}
AssertPathIsMountPoint={{ assert_path_is_mount_point }}
{% endfor -%}
{% endif -%}
{% if item.value.assert_path_is_read_write is defined %}
{% for assert_path_is_read_write in item.value.assert_path_is_read_write %}
AssertPathIsReadWrite={{ assert_path_is_read_write }}
{% endfor -%}
{% endif -%}
{% if item.value.assert_directory_not_empty is defined %}
{% for assert_directory_not_empty in item.value.assert_directory_not_empty %}
AssertDirectoryNotEmpty={{ assert_directory_not_empty }}
{% endfor -%}
{% endif -%}
{% if item.value.assert_file_not_empty is defined %}
{% for assert_file_not_empty in item.value.assert_file_not_empty %}
AssertFileNotEmpty={{ assert_file_not_empty }}
{% endfor -%}
{% endif -%}
{% if item.value.assert_file_is_executable is defined %}
{% for assert_file_is_executable in item.value.assert_file_is_executable %}
AssertFileIsExecutable={{ assert_file_is_executable }}
{% endfor -%}
{% endif -%}
{% if item.value.assert_user is defined %}
{% for assert_user in item.value.assert_user %}
AssertUser={{ assert_user }}
{% endfor -%}
{% endif -%}
{% if item.value.assert_group is defined %}
{% for assert_group in item.value.assert_group %}
AssertGroup={{ assert_group }}
{% endfor -%}
{% endif -%}
{% if item.value.assert_control_group_controller is defined %}
{% for assert_control_group_controller in item.value.assert_control_group_controller %}
AssertControlGroupController={{ assert_control_group_controller }}
{% endfor -%}
{% endif -%}

[Service]
{% if item.value.type is defined %}
Type={{ item.value.type }}
{% endif -%}
{% if item.value.pid_file is defined %}
PIDFile={{ item.value.pid_file }}
{% endif -%}

{% if item.value.timeout_sec is defined %}
TimeoutSec={{ item.value.timeout_sec }}
{% endif -%}
{% if item.value.restart is defined %}
RestartSec={{ item.value.restart_sec | default('30') }}
Restart={{ item.value.restart }}
{% endif -%}

{% if item.value.environment is defined %}
{% for env in item.value.environment %}
Environment={{ env }}
{% endfor -%}
{% endif -%}
{% if item.value.environment_file is defined %}
EnvironmentFile={{ item.value.environment_file }}
{% endif -%}

{% if item.value.working_directory is defined %}
WorkingDirectory={{ item.value.working_directory }}
{% endif -%}
{% if item.value.user is defined %}
User={{ item.value.user }}
{% endif -%}
{% if item.value.group is defined %}
Group={{ item.value.group }}
{% endif -%}

{% if item.value.oom_score_adjust is defined %}
OOMScoreAdjust={{ item.value.oom_score_adjust }}
{% endif -%}
{% if item.value.nice is defined %}
Nice={{ item.value.nice }}
{% endif -%}

{% if item.value.exec_stop is defined %}
{% if item.value.exec_stop is not string %}
{% for exec_stop in item.value.exec_stop -%}
ExecStop={{ exec_stop }}
{% endfor %}
{% else %}
ExecStop={{ item.value.exec_stop }}
{% endif -%}
{% endif -%}
{% if item.value.exec_stop_post is defined %}
{% if item.value.exec_stop_post is not string %}
{% for exec_stop_post in item.value.exec_stop_post -%}
ExecStopPost={{ exec_stop_post }}
{% endfor %}
{% else %}
ExecStopPost={{ item.value.exec_stop_post }}
{% endif -%}
{% endif -%}
{% if item.value.exec_reload is defined %}
{% if item.value.exec_reload is not string %}
{% for exec_reload in item.value.exec_reload -%}
ExecReload={{ item.value.exec_reload }}
{% endfor %}
{% else %}
ExecReload={{ item.value.exec_reload }}
{% endif -%}
{% endif -%}

{% if item.value.exec_start_pre is defined %}
{% if item.value.exec_start_pre is not string %}
{% for exec_start_pre in item.value.exec_start_pre -%}
ExecStartPre={{ exec_start_pre }}
{% endfor %}
{% else %}
ExecStartPre={{ item.value.exec_start_pre }}
{% endif -%}
{% endif -%}
{% if item.value.exec_start_post is defined %}
{% if item.value.exec_start_post is not string %}
{% for exec_start_post in item.value.exec_start_post -%}
ExecStartPost={{ item.value.exec_start_post }}
{% endfor %}
{% else %}
ExecStartPost={{ item.value.exec_start_post }}
{% endif -%}
{% endif -%}
{% if item.value.exec_start is defined %}
{% if item.value.exec_start is not string %}
{% for exec_start in item.value.exec_startt -%}
ExecStart={{ exec_start }}
{% endfor %}
{% else %}
ExecStart={{ item.value.exec_start }}
{% endif -%}
{% endif -%}

{% if item.value.standard_input is defined %}
StandardInput={{ item.value.standard_input }}
{% endif -%}
{% if item.value.standard_output is defined %}
StandardOutput={{ item.value.standard_output }}
{% endif -%}
{% if item.value.standard_error is defined %}
StandardError={{ item.value.standard_error }}
{% endif %}

[Install]
{% if item.value.wanted_by is defined %}
WantedBy={{ item.value.wanted_by }}
{% endif -%}
{% if item.value.required_by is defined %}
RequiredBy={{ item.value.required_by }}
{% endif %}
